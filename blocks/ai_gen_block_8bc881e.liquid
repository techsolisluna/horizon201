{% liquid
  # Pega o metaobject autor atual da página
  assign current_author = page.metaobject | default: metaobject

  # Para a seção principal, vamos usar todos os produtos e filtrar depois
  assign section_products = collections.all.products
  assign max_items = section.settings.max_products

  case section.settings.layout_type
    when 'grid'
      assign classes = 'resource-list--grid'
      capture styles
        echo '--resource-list-column-gap-desktop: ' | append: section.settings.columns_gap | append: 'px;'
        echo '--resource-list-row-gap-desktop: ' | append: section.settings.rows_gap | append: 'px;'
        echo '--resource-list-columns: repeat(' | append: section.settings.columns | append: ', 1fr);'
        echo '--resource-list-columns-mobile: repeat(' | append: section.settings.mobile_columns | append: ', 1fr);'
      endcapture
    when 'carousel'
      assign classes = 'resource-list__carousel'
      capture styles
        echo '--resource-list-column-gap-desktop: ' | append: section.settings.columns_gap | append: 'px;'
        echo '--column-count: ' | append: section.settings.columns | append: ';'
        echo '--column-count-mobile: ' | append: section.settings.mobile_columns | append: ';'
      endcapture
  endcase
%}

<div class="section-background color-{{ section.settings.color_scheme }}"></div>
<div
  class="
    section
    section--{{ section.settings.section_width }}
    color-{{ section.settings.color_scheme }}
    section-resource-list
    spacing-style
    gap-style
    {% if request.design_mode == false and section_products.size == 0 %}
      in-onboarding-state
    {% endif %}
  "
  style="
    --column-count-mobile: {{ section.settings.mobile_columns }};
    {% render 'spacing-style', settings: section.settings %}
    {% render 'gap-style', value: section.settings.gap %}
    {{ styles }}
  "
>
  <div class="section-resource-list__header">
    {%- content_for 'block', type: '_product-list-content', id: 'static-header' -%}
  </div>

  {% capture list_items %}
    {% assign products_found = 0 %}
    {% for product in collections.all.products %}
      {% assign show_product = false %}
      
      {% comment %} Verifica se o produto tem o autor atual na lista custom.autor {% endcomment %}
      {% if product.metafields.custom.autor.value %}
        {% for autor_no_produto in product.metafields.custom.autor.value %}
          {% if autor_no_produto.id == current_author.id %}
            {% assign show_product = true %}
            {% break %}
          {% endif %}
        {% endfor %}
      {% endif %}
      
      {% if show_product and products_found < max_items %}
        {% assign products_found = products_found | plus: 1 %}
        <div class="resource-list__item">
          {% content_for 'block', type: 'product-card', id: 'static-product-card', closest.product: product %}
        </div>

        {% unless products_found >= max_items %}
          <!--@list/split-->
        {% endunless %}
      {% endif %}
    {% endfor %}
    
    {% comment %} Se não encontrou produtos suficientes, adiciona placeholders {% endcomment %}
    {% if products_found == 0 %}
      {% for i in (1..4) %}
        <div class="resource-list__item">
          {% content_for 'block', type: 'product-card', id: 'static-product-card', closest.product: null %}
        </div>
        {% unless forloop.last %}
          <!--@list/split-->
        {% endunless %}
      {% endfor %}
    {% endif %}
  {% endcapture %}

  {% liquid
    # Create an array from the list items to be used for different layout types
    assign list_items_array = list_items | strip | split: '<!--@list/split-->'
  %}

  <div
    class="
      resource-list
      {% if section.settings.layout_type == 'carousel' %}
        force-full-width
      {% endif %}
      {% if section.settings.carousel_on_mobile and section.settings.layout_type != 'carousel' %}
        hidden--mobile
      {% endif %}
      {{ classes }}
    "
    style="{{ styles }}"
    {% if section.settings.layout_type == 'grid' %}
      data-testid="resource-list-grid"
    {% endif %}
  >
    {% case section.settings.layout_type %}
      {% when 'grid' %}
        {{ list_items }}
      {% when 'carousel' %}
        {% render 'resource-list-carousel',
          ref: 'resourceListCarousel',
          slides: list_items_array,
          slide_count: max_items,
          settings: section.settings
        %}
      {% when 'editorial' %}
        {% render 'editorial-product-grid', items: list_items_array %}
    {% endcase %}
  </div>

  {% if section.settings.carousel_on_mobile and section.settings.layout_type != 'carousel' %}
    {% liquid
      assign mobile_carousel_gap = section.settings.columns_gap
    %}
    <div
      class="
        resource-list
        hidden--desktop
        force-full-width
      "
      style="
        --resource-list-column-gap-desktop: {{ mobile_carousel_gap }}px;
        --column-count: {{ section.settings.columns }};
      "
    >
      {% render 'resource-list-carousel',
        ref: 'resourceListCarouselMobile',
        slides: list_items_array,
        slide_count: max_items,
        settings: section.settings
      %}
    </div>
  {% endif %}

  <div
    class="section-resource-list__content"
    style="--horizontal-alignment: {{ section.settings.horizontal_alignment }};"
  >
    {%- content_for 'blocks' -%}
  </div>

  <!-- Author Products Filter -->
  {% if section.settings.show_author_products %}
    {% assign ai_gen_id = section.id | replace: '_', '' | downcase %}
    
    <style>
      .product-filter-{{ ai_gen_id }} {
        margin: 40px 0;
      }
      
      .product-filter__grid-{{ ai_gen_id }} {
        display: grid;
        grid-template-columns: repeat({{ section.settings.filter_columns_desktop }}, 1fr);
        gap: 20px;
        margin-top: 20px;
      }
      
      @media screen and (max-width: 749px) {
        .product-filter__grid-{{ ai_gen_id }} {
          grid-template-columns: repeat({{ section.settings.filter_columns_mobile }}, 1fr);
        }
      }
      
      .product-filter__card-{{ ai_gen_id }} {
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        transition: transform 0.3s ease;
        text-decoration: none;
        color: inherit;
      }
      
      .product-filter__card-{{ ai_gen_id }}:hover {
        transform: translateY(-5px);
      }
      
      .product-filter__image-{{ ai_gen_id }} {
        width: 100%;
        aspect-ratio: 1;
        object-fit: cover;
      }
      
      .product-filter__placeholder-{{ ai_gen_id }} {
        width: 100%;
        aspect-ratio: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f4f4f4;
      }
      
      .product-filter__placeholder-{{ ai_gen_id }} svg {
        width: 50%;
        height: 50%;
      }
      
      .product-filter__info-{{ ai_gen_id }} {
        padding: 15px;
      }
      
      .product-filter__title-{{ ai_gen_id }} {
        font-size: 16px;
        font-weight: 600;
        margin: 0 0 10px 0;
      }
      
      .product-filter__price-{{ ai_gen_id }} {
        font-size: 14px;
        color: #333;
      }
      
      .product-filter__empty-{{ ai_gen_id }} {
        text-align: center;
        padding: 40px 20px;
        font-size: 16px;
        color: #666;
      }
    </style>

    <div class="product-filter-{{ ai_gen_id }}">
      {% if section.settings.author_products_heading != blank %}
        <h2>{{ section.settings.author_products_heading }}</h2>
      {% endif %}
      
      <!-- DEBUG: Remover depois de testar -->
      {% comment %}
      <p>Debug - Current Author: {{ current_author.nome.value | default: "Não encontrado" }}</p>
      <p>Debug - Author ID: {{ current_author.id | default: "Sem ID" }}</p>
      <p>Debug - Products found: {{ filtered_products_found }}</p>
      {% endcomment %}
      
      {% liquid
        # Se uma coleção específica for escolhida, filtra por ela, senão usa todos os produtos
        if section.settings.filter_collection != blank
          assign products_to_filter = collections[section.settings.filter_collection].products
        else
          assign products_to_filter = collections.all.products
        endif
        
        assign max_products = section.settings.filter_max_products | default: 12
      %}
      
      {% assign filtered_products_found = 0 %}
      {% assign filtered_products_html = '' %}
      
      {% for product in products_to_filter %}
        {% assign show_product = false %}
        
        {% comment %} Testa diferentes possibilidades do metafield {% endcomment %}
        {% if product.metafields.custom.autor.value %}
          {% for autor_no_produto in product.metafields.custom.autor.value %}
            {% if autor_no_produto.id == current_author.id %}
              {% assign show_product = true %}
              {% break %}
            {% endif %}
          {% endfor %}
        {% elsif product.metafields.custom.autores.value %}
          {% for autor_no_produto in product.metafields.custom.autores.value %}
            {% if autor_no_produto.id == current_author.id %}
              {% assign show_product = true %}
              {% break %}
            {% endif %}
          {% endfor %}
        {% elsif product.metafields.autor.value %}
          {% for autor_no_produto in product.metafields.autor.value %}
            {% if autor_no_produto.id == current_author.id %}
              {% assign show_product = true %}
              {% break %}
            {% endif %}
          {% endfor %}
        {% endif %}
        
        {% if show_product and filtered_products_found < max_products %}
          {% assign filtered_products_found = filtered_products_found | plus: 1 %}
          {% capture product_html %}
            <a href="{{ product.url }}" class="product-filter__card-{{ ai_gen_id }}">
              {% if product.featured_image %}
                <img 
                  src="{{ product.featured_image | image_url: width: 400 }}"
                  alt="{{ product.featured_image.alt | escape }}"
                  loading="lazy"
                  class="product-filter__image-{{ ai_gen_id }}"
                  width="400"
                  height="400"
                >
              {% else %}
                <div class="product-filter__placeholder-{{ ai_gen_id }}">
                  {{ 'product-apparel-1' | placeholder_svg_tag }}
                </div>
              {% endif %}
              <div class="product-filter__info-{{ ai_gen_id }}">
                <h3 class="product-filter__title-{{ ai_gen_id }}">{{ product.title }}</h3>
                <div class="product-filter__price-{{ ai_gen_id }}">{{ product.price | money }}</div>
              </div>
            </a>
          {% endcapture %}
          {% assign filtered_products_html = filtered_products_html | append: product_html %}
        {% endif %}
      {% endfor %}
      
      {% if filtered_products_found > 0 %}
        <div class="product-filter__grid-{{ ai_gen_id }}">
          {{ filtered_products_html }}
        </div>
      {% else %}
        <div class="product-filter__empty-{{ ai_gen_id }}">
          {{ section.settings.empty_text }}
        </div>
      {% endif %}
    </div>
  {% endif %}
</div>

{% schema %}
{
  "name": "Author Products List",
  "class": "ui-test-author-products",
  "blocks": [
    {
      "type": "@theme"
    },
    {
      "type": "@app"
    },
    {
      "type": "_divider"
    }
  ],
  "settings": [
    {
      "type": "select",
      "id": "layout_type",
      "label": "t:settings.layout_type",
      "options": [
        {
          "value": "grid",
          "label": "t:options.grid"
        },
        {
          "value": "carousel",
          "label": "t:options.carousel"
        },
        {
          "value": "editorial",
          "label": "t:options.editorial"
        }
      ],
      "default": "grid"
    },
    {
      "type": "checkbox",
      "id": "carousel_on_mobile",
      "label": "t:settings.carousel_on_mobile",
      "default": false,
      "visible_if": "{{ section.settings.layout_type != 'carousel' }}"
    },
    {
      "type": "range",
      "id": "max_products",
      "label": "t:settings.product_count",
      "min": 1,
      "max": 24,
      "step": 1,
      "default": 8
    },
    {
      "type": "range",
      "id": "columns",
      "label": "t:settings.columns",
      "min": 1,
      "max": 8,
      "step": 1,
      "default": 4,
      "visible_if": "{{ section.settings.layout_type != 'editorial' }}"
    },
    {
      "type": "select",
      "id": "mobile_columns",
      "label": "t:settings.mobile_columns",
      "options": [
        {
          "value": "1",
          "label": "t:options.one_number"
        },
        {
          "value": "2",
          "label": "t:options.two_number"
        }
      ],
      "default": "2",
      "visible_if": "{{ section.settings.layout_type == 'grid' and section.settings.carousel_on_mobile == false }}"
    },
    {
      "type": "range",
      "id": "columns_gap",
      "label": "t:settings.horizontal_gap",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 8,
      "visible_if": "{{ section.settings.layout_type == 'grid' or section.settings.layout_type == 'carousel' }}"
    },
    {
      "type": "range",
      "id": "rows_gap",
      "label": "t:settings.vertical_gap",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 8,
      "visible_if": "{{ section.settings.layout_type == 'grid'}}"
    },
    {
      "type": "header",
      "content": "t:content.carousel_navigation",
      "visible_if": "{{ section.settings.layout_type == 'carousel' or section.settings.carousel_on_mobile == true }}"
    },
    {
      "type": "select",
      "id": "icons_style",
      "label": "t:settings.icon",
      "options": [
        {
          "value": "arrow",
          "label": "t:options.arrows"
        },
        {
          "value": "chevron",
          "label": "t:options.chevrons"
        },
        {
          "value": "arrows_large",
          "label": "t:options.arrows_large"
        },
        {
          "value": "chevron_large",
          "label": "t:options.chevron_large"
        },
        {
          "value": "none",
          "label": "t:options.none"
        }
      ],
      "default": "arrow",
      "visible_if": "{{ section.settings.layout_type == 'carousel' or section.settings.carousel_on_mobile == true }}"
    },
    {
      "type": "select",
      "id": "icons_shape",
      "label": "t:settings.icon_background",
      "options": [
        {
          "value": "none",
          "label": "t:options.none"
        },
        {
          "value": "circle",
          "label": "t:options.circle"
        },
        {
          "value": "square",
          "label": "t:options.square"
        }
      ],
      "default": "none",
      "visible_if": "{{ section.settings.icons_style != 'none' and section.settings.layout_type == 'carousel' or section.settings.carousel_on_mobile == true }}"
    },
    {
      "type": "header",
      "content": "t:content.section_layout"
    },
    {
      "type": "select",
      "id": "section_width",
      "label": "t:settings.width",
      "options": [
        {
          "value": "page-width",
          "label": "t:options.page"
        },
        {
          "value": "full-width",
          "label": "t:options.full"
        }
      ],
      "default": "page-width"
    },
    {
      "type": "select",
      "id": "horizontal_alignment",
      "label": "t:settings.alignment",
      "options": [
        {
          "value": "flex-start",
          "label": "t:options.left"
        },
        {
          "value": "center",
          "label": "t:options.center"
        },
        {
          "value": "flex-end",
          "label": "t:options.right"
        }
      ],
      "default": "flex-start"
    },
    {
      "type": "range",
      "id": "gap",
      "label": "t:settings.gap",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 12
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:settings.color_scheme",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:content.padding"
    },
    {
      "type": "range",
      "id": "padding-block-start",
      "label": "t:settings.top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding-block-end",
      "label": "t:settings.bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 0
    },
    {
      "type": "header",
      "content": "Author Products Filter"
    },
    {
      "type": "checkbox",
      "id": "show_author_products",
      "label": "Show author products section",
      "default": true
    },
    {
      "type": "text",
      "id": "author_products_heading",
      "label": "Author products heading",
      "default": "Products by this author"
    },
    {
      "type": "collection",
      "id": "filter_collection",
      "label": "Collection to filter (optional)",
      "info": "Leave empty to search all products"
    },
    {
      "type": "text",
      "id": "empty_text",
      "label": "Empty state text",
      "default": "No products found for this author"
    },
    {
      "type": "range",
      "id": "filter_columns_desktop",
      "min": 2,
      "max": 5,
      "step": 1,
      "default": 3,
      "label": "Filter columns on desktop"
    },
    {
      "type": "select",
      "id": "filter_columns_mobile",
      "label": "Filter columns on mobile",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "1"
    },
    {
      "type": "range",
      "id": "filter_max_products",
      "min": 1,
      "max": 24,
      "step": 1,
      "default": 12,
      "label": "Maximum products to show in filter"
    }
  ],
  "presets": [
    {
      "name": "Author Products Grid",
      "category": "Products",
      "settings": {
        "max_products": 8,
        "layout_type": "grid",
        "carousel_on_mobile": false,
        "columns": 3,
        "mobile_columns": "2",
        "columns_gap": 8,
        "rows_gap": 36,
        "icons_style": "arrow",
        "icons_shape": "none",
        "section_width": "page-width",
        "gap": 28,
        "color_scheme": "scheme-1",
        "padding-block-start": 48,
        "padding-block-end": 48,
        "show_author_products": true,
        "author_products_heading": "Products by this author",
        "filter_columns_desktop": 3,
        "filter_columns_mobile": "1",
        "filter_max_products": 12,
        "empty_text": "No products found for this author"
      }
    },
    {
      "name": "Author Products Carousel",
      "category": "Products", 
      "settings": {
        "max_products": 6,
        "layout_type": "carousel",
        "carousel_on_mobile": false,
        "columns": 4,
        "mobile_columns": "2",
        "columns_gap": 8,
        "rows_gap": 36,
        "icons_style": "arrow",
        "icons_shape": "circle",
        "section_width": "page-width",
        "gap": 28,
        "color_scheme": "scheme-1",
        "padding-block-start": 48,
        "padding-block-end": 48,
        "show_author_products": true,
        "author_products_heading": "Products by this author",
        "filter_columns_desktop": 4,
        "filter_columns_mobile": "2",
        "filter_max_products": 8,
        "empty_text": "No products found for this author"
      }
    }
  ]
}
{% endschema %}