{% doc %}
  @prompt
    loop to every Metaobject Autor to sho the autor.foto and the display name. Show as a grid, metaboject Autor
    image = autor.foto
    name = autor.nome
    
    than link to the autor url page, show the metaobjects autor
    Add section description below heading

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .authors-container-{{ ai_gen_id }} {
    {% if block.settings.container_width == 'full' %}
      width: 100%;
      padding: 0 {{ block.settings.container_padding }}px;
    {% else %}
      max-width: {{ block.settings.max_width }}px;
      margin: 0 auto;
      padding: 0 {{ block.settings.container_padding }}px;
    {% endif %}
  }

  .authors-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat({{ block.settings.columns_desktop }}, 1fr);
    gap: {{ block.settings.grid_gap }}px;
    {% if block.settings.container_width == 'full' %}
      width: 100%;
    {% endif %}
  }

  @media screen and (max-width: 749px) {
    .authors-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ block.settings.columns_mobile }}, 1fr);
    }
  }

  .author-card-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    padding: {{ block.settings.card_padding }}px;
    border-radius: {{ block.settings.card_border_radius }}px;
    background-color: {{ block.settings.card_background_color }};
    transition: transform 0.3s ease;
    text-decoration: none;
  }

  {% if block.settings.hover_effect %}
  .author-card-{{ ai_gen_id }}:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  }
  {% endif %}
  
  {% if block.settings.image_grayscale_effect %}
  .author-card-{{ ai_gen_id }}:hover .author-image-{{ ai_gen_id }} {
    filter: grayscale(0%);
  }
  {% endif %}

  .author-image-wrapper-{{ ai_gen_id }} {
    width: 100%;
    max-width: {{ block.settings.image_size }}px;
    aspect-ratio: 1/1;
    margin-bottom: 15px;
    border-radius: {{ block.settings.image_border_radius }}px;
    overflow: hidden;
  }

  .author-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    {% if block.settings.image_grayscale_effect %}
    filter: grayscale(100%);
    transition: filter 0.3s ease;
    {% endif %}
  }

  .author-image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f4f4f4;
    border-radius: {{ block.settings.image_border_radius }}px;
  }

  .author-image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.5;
  }

  .author-name-{{ ai_gen_id }} {
    font-size: {{ block.settings.name_font_size }}px;
    font-weight: {{ block.settings.name_font_weight }};
    color: {{ block.settings.name_color }};
    margin: 0;
  }

  .section-description-{{ ai_gen_id }} {
    text-align: {{ block.settings.description_alignment }};
    font-size: {{ block.settings.description_font_size }}px;
    color: {{ block.settings.description_color }};
    margin-bottom: 30px;
    line-height: 1.5;
  }

  .authors-heading-{{ ai_gen_id }} {
    text-align: {{ block.settings.heading_alignment }};
    margin-bottom: 20px;
    color: {{ block.settings.heading_color }};
    font-size: {{ block.settings.heading_size }}px;
  }
{% endstyle %}

<div class="authors-container-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  {% if block.settings.heading != blank %}
    <h2 class="authors-heading-{{ ai_gen_id }}">
      {{ block.settings.heading }}
    </h2>
  {% endif %}

  {% if block.settings.description != blank %}
    <div class="section-description-{{ ai_gen_id }}">
      {{ block.settings.description }}
    </div>
  {% endif %}

  <div class="authors-grid-{{ ai_gen_id }}">
    {% assign autores_ordenados = metaobjects.autor.values | sort: 'nome.value' %}
      {% for autor in autores_ordenados %}
      <a href="{{ autor.system.url }}" class="author-card-{{ ai_gen_id }}">
        <div class="author-image-wrapper-{{ ai_gen_id }}">
          {% if autor.foto.value != blank %}
            <img 
              src="{{ autor.foto.value | image_url: width: 300 }}" 
              alt="{{ autor.nome.value }}" 
              loading="lazy"
              class="author-image-{{ ai_gen_id }}"
            >
          {% else %}
            <div class="author-image-placeholder-{{ ai_gen_id }}">
              {{ 'image' | placeholder_svg_tag }}
            </div>
          {% endif %}
        </div>
        <h3 class="author-name-{{ ai_gen_id }}">{{ autor.nome.value }}</h3>
      </a>
    {% else %}
      {% for i in (1..4) %}
        <div class="author-card-{{ ai_gen_id }}">
          <div class="author-image-wrapper-{{ ai_gen_id }}">
            <div class="author-image-placeholder-{{ ai_gen_id }}">
              {{ 'image' | placeholder_svg_tag }}
            </div>
          </div>
          <h3 class="author-name-{{ ai_gen_id }}">Author Name</h3>
        </div>
      {% endfor %}
    {% endfor %}
  </div>
</div>

{% schema %}
{
  "name": "Authors Grid",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Our Authors"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description",
      "info": "Optional description text to display below the heading"
    },
    {
      "type": "select",
      "id": "description_alignment",
      "label": "Description alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "Container"
    },
    {
      "type": "select",
      "id": "container_width",
      "label": "Container width",
      "options": [
        {
          "value": "centered",
          "label": "Centered with max width"
        },
        {
          "value": "full",
          "label": "Full width"
        }
      ],
      "default": "centered",
      "info": "Choose between centered layout or full screen width"
    },
    {
      "type": "range",
      "id": "max_width",
      "min": 800,
      "max": 1400,
      "step": 50,
      "default": 1200,
      "unit": "px",
      "label": "Maximum width",
      "info": "Only applies when 'Centered with max width' is selected"
    },
    {
      "type": "range",
      "id": "container_padding",
      "min": 0,
      "max": 60,
      "step": 5,
      "default": 20,
      "unit": "px",
      "label": "Container side padding"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 2,
      "max": 6,
      "step": 1,
      "default": 4,
      "label": "Columns on desktop"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "label": "Columns on mobile",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "2"
    },
    {
      "type": "range",
      "id": "grid_gap",
      "min": 10,
      "max": 60,
      "step": 5,
      "default": 20,
      "unit": "px",
      "label": "Gap between items"
    },
    {
      "type": "header",
      "content": "Card Style"
    },
    {
      "type": "range",
      "id": "card_padding",
      "min": 0,
      "max": 40,
      "step": 5,
      "default": 15,
      "unit": "px",
      "label": "Card padding"
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "default": 8,
      "unit": "px",
      "label": "Card border radius"
    },
    {
      "type": "color",
      "id": "card_background_color",
      "label": "Card background color",
      "default": "#ffffff"
    },
    {
      "type": "checkbox",
      "id": "hover_effect",
      "label": "Enable hover effect",
      "default": true
    },
    {
      "type": "header",
      "content": "Image"
    },
    {
      "type": "range",
      "id": "image_size",
      "min": 80,
      "max": 300,
      "step": 10,
      "default": 150,
      "unit": "px",
      "label": "Image size"
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "min": 0,
      "max": 100,
      "step": 5,
      "default": 100,
      "unit": "px",
      "label": "Image border radius"
    },
    {
      "type": "checkbox",
      "id": "image_grayscale_effect",
      "label": "Enable grayscale to color effect on hover",
      "default": true,
      "info": "Images start in grayscale and show color on hover"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 16,
      "max": 48,
      "step": 1,
      "default": 28,
      "unit": "px",
      "label": "Heading font size"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "name_font_size",
      "min": 12,
      "max": 28,
      "step": 1,
      "default": 16,
      "unit": "px",
      "label": "Author name font size"
    },
    {
      "type": "select",
      "id": "name_font_weight",
      "label": "Author name font weight",
      "options": [
        {
          "value": "400",
          "label": "Regular"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semibold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "600"
    },
    {
      "type": "color",
      "id": "name_color",
      "label": "Author name color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "description_font_size",
      "min": 10,
      "max": 18,
      "step": 1,
      "default": 14,
      "unit": "px",
      "label": "Description font size"
    },
    {
      "type": "color",
      "id": "description_color",
      "label": "Description color",
      "default": "#666666"
    }
  ],
  "presets": [
    {
      "name": "Authors Grid"
    }
  ]
}
{% endschema %}